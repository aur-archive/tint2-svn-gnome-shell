diff -crB src/panel.h tint2-read-only/src/panel.h
*** src/panel.h	2012-01-25 22:19:51.686013169 +0200
--- tint2-read-only/src/panel.h	2012-01-25 17:39:39.712183663 +0200
***************
*** 98,103 ****
--- 98,106 ----
  	// while panel->area.list is used to loop over all panel's objects
  	Taskbar *taskbar;
  	int  nb_desktop;
+     
+     //last desktop count, taskbar height, total space
+     int ld, th, total_space, task_space, thistime; 
  
  	// --------------------------------------------------
  	// clock
diff -crB src/taskbar/taskbar.c tint2-read-only/src/taskbar/taskbar.c
*** src/taskbar/taskbar.c	2012-01-25 22:22:06.649449999 +0200
--- tint2-read-only/src/taskbar/taskbar.c	2012-01-25 21:08:20.800309446 +0200
***************
*** 124,134 ****
  	panel->g_taskbar.area_name.resize = 1;
  	panel->g_taskbar.area_name.on_screen = 1;
  
! 	// taskbar
  	panel->g_taskbar.area.parent = panel;
  	panel->g_taskbar.area.panel = panel;
  	panel->g_taskbar.area.size_mode = SIZE_BY_LAYOUT;
  	panel->g_taskbar.area._resize = resize_taskbar;
  	panel->g_taskbar.area._draw_foreground = draw_taskbar;
  	panel->g_taskbar.area._on_change_layout = on_change_taskbar;
  	panel->g_taskbar.area.resize = 1;
--- 124,137 ----
  	panel->g_taskbar.area_name.resize = 1;
  	panel->g_taskbar.area_name.on_screen = 1;
  
! 	// taskbar    
  	panel->g_taskbar.area.parent = panel;
  	panel->g_taskbar.area.panel = panel;
  	panel->g_taskbar.area.size_mode = SIZE_BY_LAYOUT;
  	panel->g_taskbar.area._resize = resize_taskbar;
+     //panel->g_taskbar.area.paddingxlr
+     printf("w00tyysf %d %d %d \n\n", panel->area.paddingxlr, panel->area.paddingx, panel->area.paddingy);
+     
  	panel->g_taskbar.area._draw_foreground = draw_taskbar;
  	panel->g_taskbar.area._on_change_layout = on_change_taskbar;
  	panel->g_taskbar.area.resize = 1;
***************
*** 304,310 ****
  	Panel *panel = (Panel*)taskbar->area.panel;
  	int text_width;
  
! 	//printf("resize_taskbar %d %d\n", taskbar->area.posx, taskbar->area.posy);
  	if (panel_horizontal) {
  		resize_by_layout(obj, panel->g_task.maximum_width);
  		
--- 307,335 ----
  	Panel *panel = (Panel*)taskbar->area.panel;
  	int text_width;
  
!     int last_h=25;
!     int addition=0;
!     if(panel->nb_desktop>1){
!         if(panel->th < 1){
!             panel->total_space = ( taskbar->area.height * panel->nb_desktop ) + ( panel->area.paddingx * ( panel->nb_desktop - 1 ) );
!             printf("FIRST!! %d -- %d\n", panel->total_space, taskbar->area.height);
!             panel->task_space=panel->total_space - last_h - panel->area.paddingx;
!             
!             panel->th=taskbar->area.height;
!         }
! 
!         
!         
!         if(panel->ld != panel->nb_desktop){
!             panel->ld = panel->nb_desktop;
!             printf("Change in taskbar count\n");
! 
!             addition = panel->task_space / ( panel->nb_desktop - 1 );
!             panel->thistime=addition - panel->area.paddingx;
!         }
!     }
! 
! 	printf("resize_taskbar %d %d\n", taskbar->area.posx, taskbar->area.posy);
  	if (panel_horizontal) {
  		resize_by_layout(obj, panel->g_task.maximum_width);
  		
***************
*** 317,326 ****
--- 342,372 ----
  		taskbar->text_width = text_width - panel->g_task.text_posx - panel->g_task.area.bg->border.width - panel->g_task.area.paddingx;
  	}
  	else {
+ 
+     if(panel->nb_desktop>1){
+ 
+         if(taskbar->desktop+2==panel->nb_desktop){
+             
+             int addy = panel->task_space - ( (panel->thistime + panel->area.paddingx) * ( panel->nb_desktop - 1 ) );
+             
+             taskbar->area.height = panel->thistime + addy;
+         }else{
+             taskbar->area.height = panel->thistime;
+         }
+ 
  		resize_by_layout(obj, panel->g_task.maximum_height);
  		
  		taskbar->text_width = taskbar->area.width - (2 * panel->g_taskbar.area.paddingy) - panel->g_task.text_posx -	panel->g_task.area.bg->border.width - panel->g_task.area.paddingx;
+ 
+         if(taskbar->desktop+1 == panel->nb_desktop){
+             taskbar->area.height=last_h;
+         }
+ 
  	}
+     }
+     
+ 
+     
  	return 0;
  }
  
